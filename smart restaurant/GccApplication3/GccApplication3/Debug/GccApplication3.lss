
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001ce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000001ce  00000262  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000045  00800068  00800068  0000026a  2**0
                  ALLOC
  3 .debug_aranges 00000098  00000000  00000000  0000026a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000000f9  00000000  00000000  00000302  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000510  00000000  00000000  000003fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000025f  00000000  00000000  0000090b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004ca  00000000  00000000  00000b6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f0  00000000  00000000  00001034  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000337  00000000  00000000  00001124  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000020f  00000000  00000000  0000145b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  0000166a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
{
	UBRRH=((unsigned char)((UBBR_VALUE)>>8));
	UBRRL=(unsigned char)UBBR_VALUE;
	UCSRB=(1<<RXEN)|(1<<TXEN)|(1<<RXCIE);
	UCSRC=(1<<URSEL)|(3<<UCSZ0);
}
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	45 c0       	rjmp	.+138    	; 0xa2 <__vector_11>
  18:	72 c0       	rjmp	.+228    	; 0xfe <__vector_12>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ee ec       	ldi	r30, 0xCE	; 206
  3a:	f1 e0       	ldi	r31, 0x01	; 1
  3c:	02 c0       	rjmp	.+4      	; 0x42 <.do_copy_data_start>

0000003e <.do_copy_data_loop>:
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0

00000042 <.do_copy_data_start>:
  42:	a8 36       	cpi	r26, 0x68	; 104
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <.do_copy_data_loop>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	a8 e6       	ldi	r26, 0x68	; 104
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	ad 3a       	cpi	r26, 0xAD	; 173
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	02 d0       	rcall	.+4      	; 0x5e <main>
  5a:	b7 c0       	rjmp	.+366    	; 0x1ca <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <main>:
void uart_transmit(char);



volatile unsigned char value;  //FOR STORING RECIEVE DATA
int main(void){
  5e:	ef 92       	push	r14
  60:	ff 92       	push	r15
  62:	0f 93       	push	r16
  64:	1f 93       	push	r17
  66:	cf 93       	push	r28
  68:	df 93       	push	r29
	
	uart0_init(UART_BAUD_SELECT(38400,F_CPU));  // Initialise USART
  6a:	80 e0       	ldi	r24, 0x00	; 0
  6c:	90 e0       	ldi	r25, 0x00	; 0
  6e:	71 d0       	rcall	.+226    	; 0x152 <_Z10uart0_initj>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
  70:	88 ea       	ldi	r24, 0xA8	; 168
  72:	91 e6       	ldi	r25, 0x61	; 97
  74:	01 97       	sbiw	r24, 0x01	; 1
  76:	f1 f7       	brne	.-4      	; 0x74 <main+0x16>
	_delay_ms(100);
	sei();         // enable all interrupts
  78:	78 94       	sei
	for(;;){
		uart0_puts("Hello\n");
  7a:	00 e6       	ldi	r16, 0x60	; 96
  7c:	10 e0       	ldi	r17, 0x00	; 0
  7e:	0f 2e       	mov	r0, r31
  80:	f8 e8       	ldi	r31, 0x88	; 136
  82:	ef 2e       	mov	r14, r31
  84:	f3 e1       	ldi	r31, 0x13	; 19
  86:	ff 2e       	mov	r15, r31
  88:	f0 2d       	mov	r31, r0
  8a:	c9 e1       	ldi	r28, 0x19	; 25
  8c:	d0 e0       	ldi	r29, 0x00	; 0
  8e:	c8 01       	movw	r24, r16
  90:	8e d0       	rcall	.+284    	; 0x1ae <_Z10uart0_putsPKc>
  92:	97 01       	movw	r18, r14
  94:	ce 01       	movw	r24, r28
  96:	01 97       	sbiw	r24, 0x01	; 1
  98:	f1 f7       	brne	.-4      	; 0x96 <main+0x38>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  9a:	21 50       	subi	r18, 0x01	; 1
  9c:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  9e:	d1 f7       	brne	.-12     	; 0x94 <main+0x36>
  a0:	f6 cf       	rjmp	.-20     	; 0x8e <main+0x30>

000000a2 <__vector_11>:
  a2:	1f 92       	push	r1
  a4:	0f 92       	push	r0
  a6:	0f b6       	in	r0, 0x3f	; 63
  a8:	0f 92       	push	r0
  aa:	11 24       	eor	r1, r1
  ac:	2f 93       	push	r18
  ae:	3f 93       	push	r19
  b0:	8f 93       	push	r24
  b2:	9f 93       	push	r25
  b4:	ef 93       	push	r30
  b6:	ff 93       	push	r31
  b8:	2b b1       	in	r18, 0x0b	; 11
  ba:	3c b1       	in	r19, 0x0c	; 12
  bc:	80 91 69 00 	lds	r24, 0x0069
  c0:	8f 5f       	subi	r24, 0xFF	; 255
  c2:	98 2f       	mov	r25, r24
  c4:	9f 71       	andi	r25, 0x1F	; 31
  c6:	80 91 68 00 	lds	r24, 0x0068
  ca:	98 17       	cp	r25, r24
  cc:	11 f4       	brne	.+4      	; 0xd2 <__vector_11+0x30>
  ce:	82 e0       	ldi	r24, 0x02	; 2
  d0:	09 c0       	rjmp	.+18     	; 0xe4 <__vector_11+0x42>
  d2:	82 2f       	mov	r24, r18
  d4:	88 71       	andi	r24, 0x18	; 24
  d6:	90 93 69 00 	sts	0x0069, r25
  da:	ec e8       	ldi	r30, 0x8C	; 140
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	e9 0f       	add	r30, r25
  e0:	f1 1d       	adc	r31, r1
  e2:	30 83       	st	Z, r19
  e4:	80 93 ac 00 	sts	0x00AC, r24
  e8:	ff 91       	pop	r31
  ea:	ef 91       	pop	r30
  ec:	9f 91       	pop	r25
  ee:	8f 91       	pop	r24
  f0:	3f 91       	pop	r19
  f2:	2f 91       	pop	r18
  f4:	0f 90       	pop	r0
  f6:	0f be       	out	0x3f, r0	; 63
  f8:	0f 90       	pop	r0
  fa:	1f 90       	pop	r1
  fc:	18 95       	reti

000000fe <__vector_12>:
  fe:	1f 92       	push	r1
 100:	0f 92       	push	r0
 102:	0f b6       	in	r0, 0x3f	; 63
 104:	0f 92       	push	r0
 106:	11 24       	eor	r1, r1
 108:	8f 93       	push	r24
 10a:	9f 93       	push	r25
 10c:	ef 93       	push	r30
 10e:	ff 93       	push	r31
 110:	90 91 6a 00 	lds	r25, 0x006A
 114:	80 91 6b 00 	lds	r24, 0x006B
 118:	98 17       	cp	r25, r24
 11a:	69 f0       	breq	.+26     	; 0x136 <__vector_12+0x38>
 11c:	80 91 6b 00 	lds	r24, 0x006B
 120:	8f 5f       	subi	r24, 0xFF	; 255
 122:	8f 71       	andi	r24, 0x1F	; 31
 124:	80 93 6b 00 	sts	0x006B, r24
 128:	ec e6       	ldi	r30, 0x6C	; 108
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	e8 0f       	add	r30, r24
 12e:	f1 1d       	adc	r31, r1
 130:	80 81       	ld	r24, Z
 132:	8c b9       	out	0x0c, r24	; 12
 134:	05 c0       	rjmp	.+10     	; 0x140 <__vector_12+0x42>
 136:	ea e2       	ldi	r30, 0x2A	; 42
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	80 81       	ld	r24, Z
 13c:	8f 7d       	andi	r24, 0xDF	; 223
 13e:	80 83       	st	Z, r24
 140:	ff 91       	pop	r31
 142:	ef 91       	pop	r30
 144:	9f 91       	pop	r25
 146:	8f 91       	pop	r24
 148:	0f 90       	pop	r0
 14a:	0f be       	out	0x3f, r0	; 63
 14c:	0f 90       	pop	r0
 14e:	1f 90       	pop	r1
 150:	18 95       	reti

00000152 <_Z10uart0_initj>:
 152:	9c 01       	movw	r18, r24
 154:	10 92 6a 00 	sts	0x006A, r1
 158:	10 92 6b 00 	sts	0x006B, r1
 15c:	10 92 69 00 	sts	0x0069, r1
 160:	10 92 68 00 	sts	0x0068, r1
 164:	99 23       	and	r25, r25
 166:	1c f4       	brge	.+6      	; 0x16e <_Z10uart0_initj+0x1c>
 168:	82 e0       	ldi	r24, 0x02	; 2
 16a:	8b b9       	out	0x0b, r24	; 11
 16c:	3f 77       	andi	r19, 0x7F	; 127
 16e:	e0 e4       	ldi	r30, 0x40	; 64
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	30 83       	st	Z, r19
 174:	29 b9       	out	0x09, r18	; 9
 176:	88 e9       	ldi	r24, 0x98	; 152
 178:	8a b9       	out	0x0a, r24	; 10
 17a:	86 e8       	ldi	r24, 0x86	; 134
 17c:	80 83       	st	Z, r24
 17e:	08 95       	ret

00000180 <_Z10uart0_putch>:
 180:	28 2f       	mov	r18, r24
 182:	80 91 6a 00 	lds	r24, 0x006A
 186:	8f 5f       	subi	r24, 0xFF	; 255
 188:	98 2f       	mov	r25, r24
 18a:	9f 71       	andi	r25, 0x1F	; 31
 18c:	80 91 6b 00 	lds	r24, 0x006B
 190:	98 17       	cp	r25, r24
 192:	e1 f3       	breq	.-8      	; 0x18c <_Z10uart0_putch+0xc>
 194:	ec e6       	ldi	r30, 0x6C	; 108
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	e9 0f       	add	r30, r25
 19a:	f1 1d       	adc	r31, r1
 19c:	20 83       	st	Z, r18
 19e:	90 93 6a 00 	sts	0x006A, r25
 1a2:	ea e2       	ldi	r30, 0x2A	; 42
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	80 81       	ld	r24, Z
 1a8:	80 62       	ori	r24, 0x20	; 32
 1aa:	80 83       	st	Z, r24
 1ac:	08 95       	ret

000001ae <_Z10uart0_putsPKc>:
 1ae:	cf 93       	push	r28
 1b0:	df 93       	push	r29
 1b2:	ec 01       	movw	r28, r24
 1b4:	88 81       	ld	r24, Y
 1b6:	88 23       	and	r24, r24
 1b8:	29 f0       	breq	.+10     	; 0x1c4 <_Z10uart0_putsPKc+0x16>
 1ba:	21 96       	adiw	r28, 0x01	; 1
 1bc:	e1 df       	rcall	.-62     	; 0x180 <_Z10uart0_putch>
 1be:	88 81       	ld	r24, Y
 1c0:	88 23       	and	r24, r24
 1c2:	d9 f7       	brne	.-10     	; 0x1ba <_Z10uart0_putsPKc+0xc>
 1c4:	df 91       	pop	r29
 1c6:	cf 91       	pop	r28
 1c8:	08 95       	ret

000001ca <_exit>:
 1ca:	f8 94       	cli

000001cc <__stop_program>:
 1cc:	ff cf       	rjmp	.-2      	; 0x1cc <__stop_program>
